"use strict";(self.webpackChunkfastkafka=self.webpackChunkfastkafka||[]).push([[5375],{3905:(e,t,a)=>{a.d(t,{Zo:()=>k,kt:()=>d});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},k=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,k=l(e,["components","mdxType","originalType","parentName"]),c=p(a),u=n,d=c["".concat(s,".").concat(u)]||c[u]||f[u]||o;return a?r.createElement(d,i(i({ref:t},k),{},{components:a})):r.createElement(d,i({ref:t},k))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},7530:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const o={},i=void 0,l={unversionedId:"api/fastkafka/testing/ApacheKafkaBroker",id:"version-0.5.0/api/fastkafka/testing/ApacheKafkaBroker",title:"ApacheKafkaBroker",description:"fastkafka.testing.ApacheKafkaBroker {fastkafka.testing.ApacheKafkaBroker}",source:"@site/versioned_docs/version-0.5.0/api/fastkafka/testing/ApacheKafkaBroker.md",sourceDirName:"api/fastkafka/testing",slug:"/api/fastkafka/testing/ApacheKafkaBroker",permalink:"/docs/0.5.0/api/fastkafka/testing/ApacheKafkaBroker",draft:!1,tags:[],version:"0.5.0",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"KafkaEvent",permalink:"/docs/0.5.0/api/fastkafka/KafkaEvent"},next:{title:"LocalRedpandaBroker",permalink:"/docs/0.5.0/api/fastkafka/testing/LocalRedpandaBroker"}},s={},p=[{value:"<code>fastkafka.testing.ApacheKafkaBroker</code>",id:"fastkafka.testing.ApacheKafkaBroker",level:2},{value:"<code>__init__</code>",id:"init",level:3},{value:"<code>start</code>",id:"start",level:3},{value:"<code>stop</code>",id:"stop",level:3}],k={toc:p},c="wrapper";function f(e){let{components:t,...a}=e;return(0,n.kt)(c,(0,r.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"fastkafka.testing.ApacheKafkaBroker"},(0,n.kt)("inlineCode",{parentName:"h2"},"fastkafka.testing.ApacheKafkaBroker")),(0,n.kt)("p",null,"ApacheKafkaBroker class, used for running unique kafka brokers in tests to prevent topic clashing."),(0,n.kt)("h3",{id:"init"},(0,n.kt)("inlineCode",{parentName:"h3"},"__init__")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"def __init__(self, topics: Iterable[str] = [], retries: int = 3, apply_nest_asyncio: bool = False, zookeeper_port: int = 2181, listener_port: int = 9092) -> None")),(0,n.kt)("p",null,"Initialises the ApacheKafkaBroker object"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"data_dir"),": Path to the directory where the zookeepeer instance will save data"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"zookeeper_port"),": Port for clients (Kafka brokes) to connect"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"listener_port"),": Port on which the clients (producers and consumers) can connect")),(0,n.kt)("h3",{id:"start"},(0,n.kt)("inlineCode",{parentName:"h3"},"start")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"def start(self: fastkafka.testing.ApacheKafkaBroker) -> str")),(0,n.kt)("p",null,"Starts a local kafka broker and zookeeper instance synchronously"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Returns"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Kafka broker bootstrap server address in string format: add:port")),(0,n.kt)("h3",{id:"stop"},(0,n.kt)("inlineCode",{parentName:"h3"},"stop")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"def stop(self: fastkafka.testing.ApacheKafkaBroker) -> None")),(0,n.kt)("p",null,"Stops a local kafka broker and zookeeper instance synchronously"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Returns"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"None")))}f.isMDXComponent=!0}}]);