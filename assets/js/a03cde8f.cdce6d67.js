"use strict";(self.webpackChunkfastkafka=self.webpackChunkfastkafka||[]).push([[4789],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),k=o,d=p["".concat(l,".").concat(k)]||p[k]||f[k]||a;return n?r.createElement(d,i(i({ref:t},c),{},{components:n})):r.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=k;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},7255:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const a={},i="Intro",s={unversionedId:"guides/Guide_01_Intro",id:"version-0.5.0/guides/Guide_01_Intro",title:"Intro",description:"This tutorial will show you how to use FastKafkaAPI, step by",source:"@site/versioned_docs/version-0.5.0/guides/Guide_01_Intro.md",sourceDirName:"guides",slug:"/guides/Guide_01_Intro",permalink:"/docs/0.5.0/guides/Guide_01_Intro",draft:!1,tags:[],version:"0.5.0",frontMatter:{}},l={},u=[{value:"Installing FastKafkaAPI",id:"installing-fastkafkaapi",level:2},{value:"Preparing a Kafka broker",id:"preparing-a-kafka-broker",level:2},{value:"Running the code",id:"running-the-code",level:2}],c={toc:u},p="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"intro"},"Intro"),(0,o.kt)("p",null,"This tutorial will show you how to use ",(0,o.kt)("b",null,"FastKafkaAPI"),", step by\nstep."),(0,o.kt)("p",null,"The goal of FastKafkaAPI is to simplify the use of Apache Kafka in\nPython inspired by FastAPI look and feel."),(0,o.kt)("p",null,"In this Intro tutorial we\u2019ll go trough the basic requirements to run the\ndemos presented in future steps."),(0,o.kt)("h2",{id:"installing-fastkafkaapi"},"Installing FastKafkaAPI"),(0,o.kt)("p",null,"First step is to install FastKafkaAPI"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ pip install fastkafka\n")),(0,o.kt)("h2",{id:"preparing-a-kafka-broker"},"Preparing a Kafka broker"),(0,o.kt)("p",null,"Next step is to prepare the Kafka environment, our consumers and\nproducers will need some channel of communication."),(0,o.kt)("p",null,'!!! info "Hey, your first info!"'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"If you already have an instance of Kafka running that you can connect to for demo purposes, feel free to skip this step. \n")),(0,o.kt)("p",null,"To go through the tutorial, we recommend that you use dockerized Kafka\nbrokers, if you have Docker and docker-compose installed the setup\nshould take you no time (if we exclude the container download times)."),(0,o.kt)("p",null,'!!! warning "Listen! This is important."'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'To be able to setup this configuration you need to have Docker and docker-compose installed\n\nSee here for more info on <a href = \\"https://docs.docker.com/\\" target=\\"_blank\\">Docker</a> and <a href = \\"https://docs.docker.com/compose/install/\\" target=\\"_blank\\">docker compose</a>\n')),(0,o.kt)("p",null,"To setup the recommended environment, first, create a new folder wher\nyou want to save your demo files (e.g.\xa0fastkafka_demo). Inside the new\nfolder create a new YAML file named ",(0,o.kt)("b",null,"kafka_demo.yml")," and copy the\nfollowing configuration into it:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'version: "3"\nservices:\n    zookeeper:\n        image: wurstmeister/zookeeper\n        hostname: zookeeper\n        container_name: zookeeper\n        networks:\n          - fastkafka-network\n        ports:\n          - "2181:2181"\n          - "22:22"\n          - "2888:2888"\n          - "3888:3888"\n    kafka:\n        image: wurstmeister/kafka\n        container_name: kafka\n        ports:\n          - "9093:9093"\n        environment:\n            HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d\' \' -f 2"\n            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"\n            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTER:PLAINTEXT,INSIDE:PLAINTEXT\n            KAFKA_ADVERTISED_LISTENERS: INTER://:9092,INSIDE://localhost:9093\n            KAFKA_LISTENERS: INTER://_{HOSTNAME_COMMAND}:9092,INSIDE://:9093\n            KAFKA_INTER_BROKER_LISTENER_NAME: INTER\n            KAFKA_CREATE_TOPICS: "hello:1:1"\n        volumes:\n            - /var/run/docker.sock:/var/run/docker.sock\n        depends_on:\n            - zookeeper\n        healthcheck:\n            test: [ "CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181" ]\n            interval: 5s\n            timeout: 10s\n            retries: 5\n        networks:\n          - fastkafka-network\nnetworks:\n    fastkafka-network:\n        name: "fastkafka-network"\n')),(0,o.kt)("p",null,"This configuration will start a single instance of Zookeeper, single\ninstance of Kafka broker and create a \u2018hello\u2019 topic (quite enough for a\nstart). To start the configuration, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ docker-compose -f kafka_demo.yaml up -d --wait\n")),(0,o.kt)("p",null,"This will start the necessary containers and wait till they report that\nthey are Healthy. After the command finishes, you are good to go to try\nout the FastKafkaAPI capabilities! \ud83c\udf8a"),(0,o.kt)("h2",{id:"running-the-code"},"Running the code"),(0,o.kt)("p",null,"After installing FastKafkaAPI and initialising the Kafka broker you can\nproceed to the \u2018First Steps\u2019 part of the tutorial. There, you will write\nyour first Kafka client and producer apps, run them, and interact with\nthem."),(0,o.kt)("p",null,"You are highly encouraged to follow along the tutorials not just by\nreading trough them but by implementing the code examples in your own\nenvironment. This will not only help you remember the use cases better\nbut also, hopefully, demonstrate to you the ease of use of this library."))}f.isMDXComponent=!0}}]);