"use strict";(self.webpackChunkfastkafka=self.webpackChunkfastkafka||[]).push([[4195],{9767:(e,t,a)=>{a.r(t),a.d(t,{default:()=>S});var r=a(7294),n=a(6010),o=a(9960),i=a(2263),s=a(7452),l=a(7462);const c={features:"features_t9lD",featureSvg:"featureSvg_GfXr",title:"title_iMVk",textContainer:"textContainer_jPR0",subTitle:"subTitle_yWbm",description:"description_ynef",rowWitExtraMargin:"rowWitExtraMargin_qK_b"},m=[{title:"WRITE",src:"img/write.svg",description:r.createElement(r.Fragment,null,"producers & consumers for Kafka topics in a simplified way")},{title:"PROTOTYPE",src:"img/prototype.svg",description:r.createElement(r.Fragment,null,"quickly & develop high-performance Kafka-based services")},{title:"STREAMLINE",src:"img/streamline.svg",description:r.createElement(r.Fragment,null,"your workflow & accelerate your progress")}];function u(e){let{src:t,title:a,description:o}=e;return r.createElement("div",{className:(0,n.Z)("col col--4")},r.createElement("div",{className:"text--center"},r.createElement("img",{className:c.featureSvg,src:t})),r.createElement("div",{className:((0,n.Z)("text--center padding-horiz--md"),c.textContainer)},r.createElement("h3",null,a),r.createElement("p",null,o)))}function d(){return r.createElement("section",{className:c.features},r.createElement("div",{className:"container"},r.createElement("div",{className:(0,n.Z)("col col--12")},r.createElement("h2",{className:c.title},"Swim with the stream\u2026ing services")),r.createElement("div",{className:"row"},m.map(((e,t)=>r.createElement(u,(0,l.Z)({key:t},e)))))))}const p={features:"features_JWCp",featureSvg:"featureSvg_ed9f",title:"title_e8_4",subTitle:"subTitle_TSnm",rowWitExtraMargin:"rowWitExtraMargin_OCkm",link:"link_ksra",wrapper:"wrapper_yrC9",verticalAndHorizontalCenter:"verticalAndHorizontalCenter_LWfS",childrenWithExtraPadding:"childrenWithExtraPadding_xwhI"};function g(){return r.createElement("section",{className:p.features},r.createElement("div",{className:"container"},r.createElement("div",{className:(0,n.Z)("col col--12")},r.createElement("h2",{className:p.title},"You get what you expect")),r.createElement("div",{className:`row ${p.childrenWithExtraPadding}`},r.createElement("div",{className:(0,n.Z)("col col--6 text--center padding-horiz--md")},r.createElement("p",null,"Function decorators with type hints specifying Pydantic classes for JSON encoding/decoding, automatic message routing and documentation generation.")),r.createElement("div",{className:(0,n.Z)("col col--6 text--center padding-horiz--md")},r.createElement("p",null,"Built on top of ",r.createElement("a",{className:p.link,href:"https://docs.pydantic.dev/",target:"_blank"},"Pydantic"),", ",r.createElement("a",{className:p.link,href:"https://github.com/aio-libs/aiokafka/",target:"_blank"},"AIOKafka")," and ",r.createElement("a",{className:p.link,href:"https://www.asyncapi.com/",target:"_blank"},"AsyncAPI"),", FastKafka simplifies the process of writing producers and consumers for Kafka topics, handling all the parsing, networking, task scheduling and data generation automatically. ")))))}const f={features:"features_i8jF",featureSvg:"featureSvg_IBxz",title:"title__ymQ",subTitle:"subTitle_DG7d",description:"description_fCta",buttons:"buttons_E9Qp",heroButton:"heroButton_F0GI",testimonialAnchor:"testimonialAnchor_iYyG",testimonialWrapper:"testimonialWrapper_gvoa",testimonialDescription:"testimonialDescription_MWAM",testimonialHeader:"testimonialHeader_iSI8",testimonialUserInfo:"testimonialUserInfo_th5k",testimonialProfilePic:"testimonialProfilePic_wg0d",testimonialSourceIcon:"testimonialSourceIcon_RwqW"};function h(e){let{testimonialLimitToShow:t,allTestimonials:a}=e;return r.createElement("div",{className:`${(0,n.Z)("col col--4")} ${f.testimonialWrapper}`},Object.entries(a).map((e=>{let[a,n]=e;return a.split("_")[1]<=t?r.createElement("a",{key:a,href:n.source.link,target:"_blank",rel:"noopener noreferrer",className:f.testimonialAnchor},r.createElement("div",{className:f.testimonialContainer},r.createElement("div",{className:f.testimonialHeader},r.createElement("div",{className:f.testimonialUserInfo},r.createElement("img",{src:n.user.profilePic,className:f.testimonialProfilePic}),r.createElement("div",null,r.createElement("h6",null,n.user.fullName),r.createElement("p",null,n.user.userName))),r.createElement("div",null,r.createElement("img",{className:f.testimonialSourceIcon,src:n.source.icon,alt:""}))),r.createElement("div",{className:"text--center padding-horiz--md"},r.createElement("p",{className:f.testimonialDescription},n.description)))):null})))}const w=["deadwisdom","benbenbang","Berouald","baggiponte","No-Application5593","code_mc","teajunky","SteamingBeer","BestBottle4517"];function b(){const[e,t]=(0,r.useState)("2"),[a,o]=(0,r.useState)(w.reduce(((e,t)=>({...e,[t]:{icon_img:"https://www.redditstatic.com/avatars/defaults/v2/avatar_default_1.png",subreddit:{display_name_prefixed:`u/${t}`}}})),{})),i=[{container_1:{source:{icon:"img/reddit-logo.png",link:"https://www.reddit.com/r/Python/comments/13i0eaz/comment/jk90bwz/?utm_source=share&utm_medium=web2x&context=3"},user:{profilePic:a.deadwisdom.icon_img,userName:a.deadwisdom.subreddit.display_name_prefixed,fullName:"deadwisdom"},description:r.createElement(r.Fragment,null,"Well well well, if it isn't the library I was already making but better. Very nice. What is your long-term vision for supporting this as a company? And are you using this now to support real customers or are you expecting this might help you establish a niche?")},container_2:{source:{icon:"img/twitter-logo.svg",link:"https://twitter.com/emaxerrno/status/1635005087721611264?s=20"},user:{profilePic:"img/a-alphabet-round-icon.png",userName:"Alexander Gallego",fullName:"Alexander Gallego"},description:r.createElement(r.Fragment,null,"this is cool. let me know if you want to share it w/ the @redpandadata community.")},container_3:{source:{icon:"img/reddit-logo.png",link:"https://www.reddit.com/r/Python/comments/11paz9u/comment/jbxbbxp/?utm_source=share&utm_medium=web2x&context=3"},user:{profilePic:a.BestBottle4517.icon_img.replace(/&amp;/g,"&"),userName:a.BestBottle4517.subreddit.display_name_prefixed,fullName:"BestBottle4517"},description:r.createElement(r.Fragment,null,"Very cool indeed. Currently at work we're using RabbitMQ for messaging so this doesn't apply to us (for now), but this type and style of implementation is exactly what I would expect when searching for libs like this. Great job!")},container_4:{source:{icon:"img/reddit-logo.png",link:"https://www.reddit.com/r/programming/comments/11sjtgm/comment/jceqgml/?utm_source=share&utm_medium=web2x&context=3"},user:{profilePic:a.teajunky.icon_img,userName:a.teajunky.subreddit.display_name_prefixed,fullName:"teajunky"},description:r.createElement(r.Fragment,null,"Wow, the code in the package is auto-generated from Jupyter-Notebooks")}},{container_1:{source:{icon:"img/reddit-logo.png",link:"https://www.reddit.com/r/FastAPI/comments/124v5di/comment/jfhg2t2/?utm_source=share&utm_medium=web2x&context=3"},user:{profilePic:a.benbenbang.icon_img.replace(/&amp;/g,"&"),userName:a.benbenbang.subreddit.display_name_prefixed,fullName:"benbenbang"},description:r.createElement(r.Fragment,null,"Nice \ud83d\udc4d\ud83c\udffb I\u2019ve promoted this project in the team! Also, would like to contribute if there\u2019s some kind of roadmap")},container_2:{source:{icon:"img/reddit-logo.png",link:"https://www.reddit.com/r/Python/comments/11paz9u/comment/jbxf1v8/?utm_source=share&utm_medium=web2x&context=3"},user:{profilePic:a.code_mc.icon_img,userName:a.code_mc.subreddit.display_name_prefixed,fullName:"code_mc"},description:r.createElement(r.Fragment,null,"I really like the idea of this, as the biggest gripe I have with most pub/sub solutions is all of the tedious boiler plate code needed to correctly subscribe and publish and manage message leases etc. While you often just want to grab a message, do some processing and put it on a different queue.")},container_3:{source:{icon:"img/reddit-logo.png",link:"https://www.reddit.com/r/FastAPI/comments/11oq09r/comment/jc4dwit/?utm_source=share&utm_medium=web2x&context=3"},user:{profilePic:a["No-Application5593"].icon_img,userName:a["No-Application5593"].subreddit.display_name_prefixed,fullName:"No-Application5593"},description:r.createElement(r.Fragment,null,"Wow! This is really great, thank you for your efforts guys. This is what I really need for one of my future projects.")},container_4:{source:{icon:"img/reddit-logo.png",link:"https://www.reddit.com/r/FastAPI/comments/11oq09r/comment/jbx4dfn/?utm_source=share&utm_medium=web2x&context=3"},user:{profilePic:a.SteamingBeer.icon_img.replace(/&amp;/g,"&"),userName:a.SteamingBeer.subreddit.display_name_prefixed,fullName:"SteamingBeer"},description:r.createElement(r.Fragment,null,"Thank you for your efforts. I see me pitching this library to my team in the near future!")}},{container_1:{source:{icon:"img/reddit-logo.png",link:"https://www.reddit.com/r/FastAPI/comments/124v5di/comment/jee9vm9/?utm_source=share&utm_medium=web2x&context=3"},user:{profilePic:a.Berouald.icon_img,userName:a.Berouald.subreddit.display_name_prefixed,fullName:"Berouald"},description:r.createElement(r.Fragment,null,"This is great! I've been thinking about making a similar tool for quite some time, nice job sir! I guess it's to fit your use case, by why stop at Kafka? A paradigm like this would be awesome in the form of a microframework. Like a general message consumer framework with pluggable interfaces for Kafka, Rabbitmq, ActiveMQ or even the Redis message broker.")},container_2:{source:{icon:"img/reddit-logo.png",link:"https://www.reddit.com/r/Python/comments/120mt5k/comment/jdpwycr/?utm_source=share&utm_medium=web2x&context=3"},user:{profilePic:a.baggiponte.icon_img,userName:a.baggiponte.subreddit.display_name_prefixed,fullName:"baggiponte"},description:r.createElement(r.Fragment,null,"Really hope this project becomes as popular as the OG FastAPI!")},container_3:{source:{icon:"img/twitter-logo.svg",link:"https://twitter.com/perbu/status/1635014207656849408?s=20"},user:{profilePic:"img/p-alphabet-round-icon.png",userName:"Per Buer",fullName:"Per Buer"},description:r.createElement(r.Fragment,null,"I really like how we're getting these more specialized ways to leverage streaming databases, instead of the somewhat intimidating access libraries.")},container_4:{source:{icon:"img/Y_Combinator_Logo.png",link:"https://news.ycombinator.com/item?id=35086594"},user:{profilePic:"img/I.svg",userName:"iknownothow",fullName:"iknownothow"},description:r.createElement(r.Fragment,null,"It looks incredible and I truly hope your project takes off for my sake since I have to work with Kafka from time to time!")}}];return(0,r.useEffect)((()=>{!async function(){try{let e={};for(const t of w){const a=await fetch(`https://www.reddit.com/user/${t}/about.json`);let r=await a.json();r.data.icon_img=r.data.icon_img.split("?")[0],e[t]=r.data}o(e)}catch(e){console.error(e)}}()}),[]),r.createElement("section",{className:`${f.features}  hero hero--primary`},r.createElement("div",{className:"container"},r.createElement("div",{className:(0,n.Z)("col col--12")},r.createElement("h2",{className:f.title},"The community has spoken!")),r.createElement("div",{className:"row"},i.map(((t,a)=>r.createElement(h,{key:a,testimonialLimitToShow:e,allTestimonials:t})))),e<Object.keys(i[0]).length&&r.createElement("div",{className:f.buttons},r.createElement("button",{className:(0,n.Z)("button button--lg",f.heroButton),onClick:()=>{t("2"===e?"3":Object.keys(i[0]).length)}},"Load More"))))}var _=a(1876);const k={features:"features_fQn7",featureSvg:"featureSvg_Td5A",title:"title_bFDR",subTitle:"subTitle_u53r",description:"description_gnTt",rowWitExtraMargin:"rowWitExtraMargin_R_NL",link:"link_SBpC",wrapper:"wrapper_DIPT",verticalAndHorizontalCenter:"verticalAndHorizontalCenter_krzz",href:"href_wqkW",faqAnswer:"faqAnswer_fJMF"},E=[{heading:"How much does FastKafka cost?",content:"FastKafka is under Apache 2.0 license and free to use."},{heading:"How can I contribute or request features?",content:"We love and welcome community contributions! Here is a <a href='https://github.com/airtai/fastkafka/blob/main/CONTRIBUTING.md' target='_blank'>doc</a> to get you started. To request features, add a \u201cFeature request\u201d using the New issue button in GitHub from <a href='https://github.com/airtai/fastkafka/issues' target='_blank'>this link</a>, or join our feature-request <a href='https://discord.gg/CJWmYpyFbc' target='_blank'>Discord channel</a>."},{heading:"Do you support any streaming platforms other than Kafka?",content:"Slowly, but surely. We built the initial version for Kafka service and for our needs, but we reached out to the wider community to find out what to do next. We added support for Redpanda, and also got requests for RabbitMQ and Pulsar that went to our backlog and we\u2019ll support them in our future releases."},{heading:"Does FastKafka integrate with AsyncAPI in the way that FastAPi integrates with OpenAPI?",content:"Very much the same, but with a small difference due to dependencies of AsyncAPI. You write your code using decorators and you get AsyncAPI specification generated automatically as YAML file. You can convert that file to static HTML file ether by Python API call, CLI or github action. AsyncAPI requires Node.js, and you don\u2019t necessarily want this in production."},{heading:"Does it assume that Kafka messages are in JSON format? What if we want to use protobuf, for example?",content:"For the first implementation we just released uses with JSON encoded messages, but we can easily add additional formats/protocols. We\u2019ve created an issue on GitHub and will try to prioritize it for one of the next releases."}];function y(){return r.createElement("section",{className:k.features},r.createElement("div",{className:"container"},r.createElement("div",{className:(0,n.Z)("col col--12")},r.createElement("h2",{className:k.title},"FAQs"),r.createElement("p",null,"For anything not covered here, join ",r.createElement("a",{className:k.href,href:"https://discord.gg/CJWmYpyFbc",target:"_blank"},"our Discord"))),r.createElement("div",{className:(0,n.Z)("col col--12 text--left padding-horiz--md")},r.createElement(_.UQ,{allowZeroExpanded:!0},E.map(((e,t)=>r.createElement(_.Qd,{key:t},r.createElement(_.Ol,null,r.createElement(_.on,null,e.heading)),r.createElement(_.Mt,null,r.createElement("p",{className:k.faqAnswer,dangerouslySetInnerHTML:{__html:e.content}})))))))))}var N=a(2251);const v={browserWindow:"browserWindow_my1Q",browserWindowHeader:"browserWindowHeader_jXSR",row:"row_KZDM",buttons:"buttons_uHc7",right:"right_oyze",browserWindowAddressBar:"browserWindowAddressBar_Pd8y",dot:"dot_giz1",browserWindowMenuIcon:"browserWindowMenuIcon_Vhuh",bar:"bar_rrRL",browserWindowBody:"browserWindowBody_Idgs"};function x(e){let{children:t,minHeight:a,url:o="",style:i,bodyStyle:s}=e;return r.createElement("div",{className:v.browserWindow,style:{...i,minHeight:a}},r.createElement("div",{className:v.browserWindowHeader},r.createElement("div",{className:v.buttons},r.createElement("span",{className:v.dot,style:{background:"#f25f58"}}),r.createElement("span",{className:v.dot,style:{background:"#fbbe3c"}}),r.createElement("span",{className:v.dot,style:{background:"#58cb42"}})),r.createElement("div",{className:(0,n.Z)(v.browserWindowAddressBar,"text--truncate")},o),r.createElement("div",{className:v.browserWindowMenuIcon},r.createElement("div",null,r.createElement("span",{className:v.bar}),r.createElement("span",{className:v.bar}),r.createElement("span",{className:v.bar})))),r.createElement("div",{className:v.browserWindowBody,style:s},t))}const I={features:"features_K0bx",featureSvg:"featureSvg_waEg",title:"title_lvu5",fastkafkaDescription:"fastkafkaDescription_h_GB",subTitle:"subTitle_FXDe",description:"description_qDmr",rowWitExtraMargin:"rowWitExtraMargin_xiCQ",fastkafkaChatIframe:"fastkafkaChatIframe_w3XB",fastkafkaChatHeader:"fastkafkaChatHeader_lrZG"};function P(){return r.createElement("section",{className:`${I.features} hero hero--primary`},r.createElement("div",{className:"container"},r.createElement("div",{className:(0,n.Z)("col col--12")},r.createElement("h2",{className:I.title},"Check out our code-generation feature!"),r.createElement("p",{className:I.fastkafkaDescription},"Let us know what you need solved and we\u2019ll generate the FastKafka code for you!")),r.createElement("div",{className:"row"},r.createElement("div",{className:(0,n.Z)("col col--12")},r.createElement("div",{className:"text--center padding-horiz--md"},r.createElement(x,null,r.createElement(N.Z,{url:"https://fastkafka-chat.azurewebsites.net/",className:I.fastkafkaChatIframe})))))))}const A={robotFooterContainer:"robotFooterContainer_CsQd",robotFooterIcon:"robotFooterIcon_R67M"};function W(){return r.createElement("section",null,r.createElement("div",{className:(0,n.Z)("container",A.robotFooterContainer)},r.createElement("img",{className:A.robotFooterIcon,src:"img/robot-footer.svg"})))}const F={heroBanner:"heroBanner_qdFl",heroRobot:"heroRobot_FLpk",buttons:"buttons_AeoN",title:"title_GqtP",description:"description_meEo",heroButton:"heroButton_GTT_",descriptionMobile:"descriptionMobile_CZcP"};function B(){return r.createElement("header",{className:(0,n.Z)("hero hero--primary",F.heroBanner)},r.createElement("div",{className:"container"},r.createElement("img",{className:F.heroRobot,src:"img/robot-hero.svg"}),r.createElement("p",{className:F.description},"Open-source framework for building asynchronous web "),r.createElement("p",{className:F.description},"services that interact with Kafka"),r.createElement("p",{className:F.descriptionMobile},"Open-source framework for building asynchronous web services that interact with Kafka"),r.createElement("div",{className:F.buttons},r.createElement(o.Z,{className:(0,n.Z)("button button--lg",F.heroButton),to:"/docs"},"Get Started"))))}function S(){const{siteConfig:e}=(0,i.Z)();return r.createElement(s.Z,{title:e.tagline,description:e.customFields.description},r.createElement(B,null),r.createElement("main",null,r.createElement(d,null),r.createElement(P,null),r.createElement(g,null),r.createElement(b,null),r.createElement(y,null),r.createElement(W,null)))}}}]);