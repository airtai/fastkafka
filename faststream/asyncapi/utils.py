from typing import List

from faststream.types import AnyDict


def to_camelcase(*names: str) -> str:
    """Converts a list of names to camel case.

    Args:
        *names: Variable length list of names to be converted to camel case.

    Returns:
        The camel case representation of the names.

    Example:
        >>> to_camelcase("hello_world")
        "HelloWorld"
    !!! note

        The above docstring is autogenerated by docstring-gen library (https://docstring-gen.airt.ai)
    """
    return " ".join(names).replace("_", " ").title().replace(" ", "")


def resolve_payloads(payloads: List[AnyDict]) -> AnyDict:
    """Resolve payloads.

    Args:
        payloads: A list of dictionaries representing payloads.

    Returns:
        A dictionary representing the resolved payload.
    !!! note

        The above docstring is autogenerated by docstring-gen library (https://docstring-gen.airt.ai)
    """
    ln = len(payloads)
    payload: AnyDict
    if ln > 1:
        payload = {"oneOf": {body["title"]: body for body in payloads}}
    elif ln == 1:
        payload = payloads[0]
    else:
        payload = {}
    return payload
