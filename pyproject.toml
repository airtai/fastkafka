[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "faststream"
description = "FastStream: the simplest way to work with a messaging queues"
readme = "README.md"
authors = [
    { name = "airt", email = "info@airt.ai" },
    { name = "Pastukhov Nikita", email = "diementros@yandex.ru" },
]

keywords = ["rabbitmq", "kafka", "framework", "message brokers"]

requires-python = ">=3.8"

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 1",
    "Framework :: Pydantic :: 2",
]

dynamic = ["version"]

dependencies = [
    "fast-depends>=2.1.3",
    "watchfiles",
    "typer",
    "uvloop>=0.14.0,!=0.15.0,!=0.15.1; sys_platform != 'win32' and (sys_platform != 'cygwin' and platform_python_implementation != 'PyPy')",
]

[project.optional-dependencies]
# public distributions
rabbit = [
    "aio-pika>=9",
]

kafka = [
    "aiokafka>=0.8",
]

docs = [
    "fastapi>=0.100.0",
    "uvicorn>=0.17.0",
]

# dev dependencies
devdocs = [
    "mkdocs-material>=9.0.0",
    "mkdocs-static-i18n>=1.0.0",
    "mdx-include>=1.4.1,<2.0.0",
    "mkdocstrings[python]>=0.23.0",
    "mkdocs-macros-plugin",
    # images zoom
    "mkdocs-glightbox",
]

lint = [
    "types-PyYAML",
    "mypy==1.5.1",
    "black==23.3.0",
    "isort>=5",
    "ruff==0.0.286",
    "pyupgrade-directories",
    "bandit==1.7.5",
    "pre-commit==3.3.3",
    "semgrep==1.38.0",
    "detect-secrets==1.4.0",
]

testing = [
    "coverage[toml]>=7.2",
    "pytest==7.4.0",
    "pytest-asyncio>=0.21",
    "dirty-equals==0.6.0",
    "fastapi>=0.100.0b",
    "pydantic-settings",
    "httpx",
    "PyYAML",
]

publish = ["hatch==1.7.0"]

dev = ["faststream[rabbit,kafka,docs,lint,testing,devdocs,publish]"]

[project.urls]
Homepage = "https://faststream.airt.ai/"
Documentation = "https://faststream.airt.ai/docs/latest/"
Tracker = "https://github.com/airtai/FastStream/issues"
Source = "https://github.com/airtai/FastStream"

[project.scripts]
faststream = "faststream.__main__:cli"

[tool.hatch.version]
path = "faststream/__about__.py"

[tool.hatch.build]
skip-excluded-dirs = true
exclude = [
    "/tests",
    "/docs",
]

[tool.mypy]
strict = true
python_version = "3.8"
ignore_missing_imports = true
install_types = true
non_interactive = true

# from https://blog.wolt.com/engineering/2021/09/30/professional-grade-mypy-configuration/
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true
warn_unused_ignores = true

disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_unimported = false

[tool.isort]
profile = "black"
known_first_party = ["faststream"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.ruff]
fix = true
line-length = 88
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "Q",  # flake8-quotes
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # too complex
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.flake8-bugbear]
extend-immutable-calls = [
    "faststream.Depends", "faststream.Context",
    "faststream.utils.Depends", "faststream.utils.Context",
    "faststream.utils.context.Depends", "faststream.utils.context.Context",
    "typer.Argument", "typer.Option",
    "pydantic.Field", "rocketry.args.Arg",
    "fastapi.Depends", "fastapi.Header",
    "fastapi.datastructures.Default",
    "kafka.partitioner.default.DefaultPartitioner",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-q -m 'not slow'"
testpaths = [
    "docs/docs_src",
    "faststream_gen_examples",
    "tests",
]
markers = [
    "rabbit",
    "kafka",
    "slow",
    "all",
]

[tool.coverage.run]
parallel = true
branch = true
concurrency = [
    "multiprocessing",
    "thread"
]
source = [
    "faststream",
    "tests"
]
context = '${CONTEXT}'
omit = [
    "**/__init__.py",
]

[tool.coverage.report]
show_missing = true
skip_empty = true
exclude_lines = [
    ".*# pragma: no cover",
    "if __name__ == .__main__.:",
    "self.logger",
    "def __repr__",
    "lambda: None",
    "from .*",
    "import .*",
    '@(abc\.)?abstractmethod',
    "raise NotImplementedError",
    'raise AssertionError',
    'raise ValueError',
    'logger\..*',
    "pass",
    '\.\.\.',
]
omit = [
    '*/__about__.py',
    '*/__main__.py',
    '*/__init__.py',
    '*/annotations.py',
]

[tool.bandit]
